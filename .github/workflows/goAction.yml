name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  platform_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.14.x, 1.17.x]
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
    - uses: WillAbides/setup-go-faster@v1.14.0
      id: setup-go-faster
      with:
        go-version: ${{ matrix.go-version }}    
    
    - name: Get dependencies
      run: sudo apt-get update && sudo apt-get install gcc libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev libx11-dev xorg-dev
      if: ${{ runner.os == 'Linux' }}
      
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: 1.17
      - run: |
         go mod init
         go get fyne.io/fyne/v2
         go mod tidy
         go build
      # - run: go install fyne.io/fyne/v2@latest
      - run: go install fyne.io/fyne/v2/cmd/fyne@latest
      - run: fyne install
      - run: go build -ldflags -H=windowsgui .\HelloWorld.go
      - run: dir
      - run: fyne package -icon .\Icon.png
      - run: dir
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            README.MD
            *.exe
      # - uses: actions/upload-artifact@v2
      #    with:
      #      name: my-app
      #      path: |
      #        .\*.exe

    # - name: GoReleaser Action
    #   uses: goreleaser/goreleaser-action@v2.8.0
    #   with: 
    #     args: release --rm-dist
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Run GoReleaser
    #   uses: goreleaser/goreleaser-action@v2
    #   with:
    #     distribution: goreleaser
    #     version: latest
    #     args: release --rm-dist
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Upload assets
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: myapp
    #     path: dist/*

    
